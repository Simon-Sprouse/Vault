#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Aug 13 23:55:46 2024

@author: simonsprouse
"""

Right so here's what the fuck I'm doing. 


I have a radix tree search and also a map search. 

I want to algorithmically time the radix tree and the map for comparison. 

At somepoint I need a bigger dataset, but not yet. 

I need to get a function that takes in the dataseta and then completes:

    - generate dataset
    - create data frame (timed)
    - create dictionary (timed)
    - create search list for testing
    - creates radix tree (timed)
    - search for all keys in common list using map (timed)
    - search for all keys in common list using radix tree (timed)
    
Then I will declare a winner or change the dataset. 







Right ok so the Map is way faster when it comes to simple key pair search. 

Maybe the tree is faster if I do a prefix regex quantity remaining search instead. 

Todo:

    - modify the Node to store the prefix children number
    - build radix tree prefix search function
    - test the prefix search on map (timed)
    - test the prefix search on radix tree (timed)
    
    
    
    
    